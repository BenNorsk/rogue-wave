{"ast":null,"code":"import mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder'; // [...]\n// if (mapElement) {\n//   // [...]\n//   map.addControl(new MapboxGeocoder({ accessToken: mapboxgl.accessToken,\n//                                       mapboxgl: mapboxgl }));\n// }\n\nvar initMapbox = function initMapbox() {\n  var mapElement = document.getElementById('map');\n\n  if (mapElement) {\n    // only build a map if there's a div#map to inject into\n    mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/bennorsk/ckfnxja6109of1auj0b8u6fls' // That is the access token to this map\n      //pk.eyJ1IjoiYmVubm9yc2siLCJhIjoiY2tmNmpnZzZvMHRmNTMwcWR1NnVocnZmdCJ9.H1zfqOnfwYWPFKh5yA3eXA\n\n    }); // here the markers defintion used to be\n\n    var _markers = JSON.parse(mapElement.dataset.markers);\n\n    console.log(_markers);\n\n    _markers.forEach(function (marker) {\n      new mapboxgl.Marker().setLngLat([marker.lng, marker.lat]).addTo(map);\n    });\n\n    fitMapToMarkers(map, _markers);\n  }\n};\n\nvar boatSelected = function boatSelected(boatClass) {\n  boats = document.querySelectorAll(\".\".concat(boatClass));\n  boats.addEventListener(\"click\", function (element) {\n    boat = event.currentTarget;\n    markers = [{\n      lat: boat.address.lat,\n      lng: boat.address.lng\n    }];\n    initMapbox();\n  });\n};\n\nvar fitMapToMarkers = function fitMapToMarkers(map, markers) {\n  var bounds = new mapboxgl.LngLatBounds();\n  markers.forEach(function (marker) {\n    return bounds.extend([marker.lng, marker.lat]);\n  });\n  map.fitBounds(bounds, {\n    padding: 70,\n    maxZoom: 15,\n    duration: 0\n  });\n};\n\nvar addMarkersToMap = function addMarkersToMap(map, markers) {\n  markers.forEach(function (marker) {\n    var popup = new mapboxgl.Popup().setHTML(marker.infoWindow); // add this\n\n    var element = document.createElement('div');\n    element.className = 'marker';\n    element.style.backgroundImage = \"url('\".concat(marker.image_url, \"')\");\n    element.style.backgroundSize = 'contain';\n    element.style.width = '25px';\n    element.style.height = '25px';\n    new mapboxgl.Marker().setLngLat([marker.lng, marker.lat]).setPopup(popup) // add this\n    .addTo(map);\n  });\n};\n\nexport { initMapbox, boatSelected };","map":{"version":3,"sources":["/home/muzza3000/code/muzza3000/rogue-wave/app/javascript/plugins/init_mapbox.js"],"names":["mapboxgl","MapboxGeocoder","initMapbox","mapElement","document","getElementById","accessToken","dataset","mapboxApiKey","map","Map","container","style","markers","JSON","parse","console","log","forEach","marker","Marker","setLngLat","lng","lat","addTo","fitMapToMarkers","boatSelected","boatClass","boats","querySelectorAll","addEventListener","element","boat","event","currentTarget","address","bounds","LngLatBounds","extend","fitBounds","padding","maxZoom","duration","addMarkersToMap","popup","Popup","setHTML","infoWindow","createElement","className","backgroundImage","image_url","backgroundSize","width","height","setPopup"],"mappings":"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","sourcesContent":["import mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n// [...]\n// if (mapElement) {\n//   // [...]\n//   map.addControl(new MapboxGeocoder({ accessToken: mapboxgl.accessToken,\n//                                       mapboxgl: mapboxgl }));\n// }\n\nconst initMapbox = () => {\n  const mapElement = document.getElementById('map');\n\n\n  if (mapElement) { // only build a map if there's a div#map to inject into\n    mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n    const map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/bennorsk/ckfnxja6109of1auj0b8u6fls'\n      // That is the access token to this map\n      //pk.eyJ1IjoiYmVubm9yc2siLCJhIjoiY2tmNmpnZzZvMHRmNTMwcWR1NnVocnZmdCJ9.H1zfqOnfwYWPFKh5yA3eXA\n    });\n    // here the markers defintion used to be\n    const markers = JSON.parse(mapElement.dataset.markers);\n     console.log(markers)\n    markers.forEach((marker) => {\n      new mapboxgl.Marker()\n        .setLngLat([ marker.lng, marker.lat ])\n        .addTo(map);\n    });\n    fitMapToMarkers(map, markers);\n  }\n\n};\n\nconst boatSelected = (boatClass) => {\n  boats = document.querySelectorAll(`.${boatClass}`);\n  boats.addEventListener(\"click\", (element) => {\n    boat = event.currentTarget;\n    markers = [{lat: boat.address.lat, lng: boat.address.lng}]\n    initMapbox()\n  });\n}\n\n\n\n\n\n\nconst fitMapToMarkers = (map, markers) => {\n  const bounds = new mapboxgl.LngLatBounds();\n  markers.forEach(marker => bounds.extend([ marker.lng, marker.lat ]));\n  map.fitBounds(bounds, { padding: 70, maxZoom: 15, duration: 0 });\n};\n\n\n\nconst addMarkersToMap = (map, markers) => {\n  markers.forEach((marker) => {\n    const popup = new mapboxgl.Popup().setHTML(marker.infoWindow); // add this\n    const element = document.createElement('div');\n    element.className = 'marker';\n    element.style.backgroundImage = `url('${marker.image_url}')`;\n    element.style.backgroundSize = 'contain';\n    element.style.width = '25px';\n    element.style.height = '25px';\n\n    new mapboxgl.Marker()\n      .setLngLat([ marker.lng, marker.lat ])\n      .setPopup(popup) // add this\n      .addTo(map);\n  });\n};\n\n\n\nexport { initMapbox, boatSelected };\n\n"]},"metadata":{},"sourceType":"module"}